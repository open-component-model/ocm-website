<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Open Component Model</title><link>https://ocm.software/docs/tutorials/</link><description>Recent content in Tutorials on Open Component Model</description><generator>Hugo</generator><language>en</language><copyright>Â© Copyright 2025, SAP SE and Open Component Model Contributors</copyright><atom:link href="https://ocm.software/docs/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Best Practices</title><link>https://ocm.software/docs/tutorials/best-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/tutorials/best-practices/</guid><description>&lt;p&gt;This chapter contains guidelines for common scenarios how to work with the Open Component Model, focusing on using CI/CD, build and publishing processes.&lt;/p&gt;</description></item><item><title>Build &amp; Deploy Applications with Helm and OCM</title><link>https://ocm.software/docs/tutorials/build-deploy-applications-with-helm-and-ocm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/tutorials/build-deploy-applications-with-helm-and-ocm/</guid><description>&lt;div class="callout callout-tip d-flex flex-row mt-4 mb-4 pt-4 pe-4 pb-2 ps-3"&gt;
 
 &lt;div class="callout-content"&gt;
 &lt;div class="callout-title"&gt;
 &lt;p&gt;Did you know?&lt;/p&gt;

 &lt;/div&gt;
 &lt;div class="callout-body"&gt;
 &lt;p&gt;Get ready for the next evolution of the Open Component Model, designed to empower your cloud-native workflows. Discover a preview of the innovative &lt;code&gt;ocm-k8s-toolkit&lt;/code&gt; 






&lt;a href="https://github.com/open-component-model/ocm-k8s-toolkit" target="_blank" rel="noopener"&gt;here&lt;/a&gt; and be part of shaping the future of component management!&lt;/p&gt;</description></item><item><title>Structuring Software Products with OCM</title><link>https://ocm.software/docs/tutorials/structuring-software-products-with-ocm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/tutorials/structuring-software-products-with-ocm/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In this tutorial software products are comprised of logical units called 





 
 


&lt;a href="https://ocm.software/docs/overview/important-terms/#components-in-ocm"&gt;&lt;em&gt;components&lt;/em&gt;&lt;/a&gt;. A component version consists of a set of technical 






&lt;a href="https://github.com/open-component-model/ocm-spec/blob/main/doc/04-extensions/01-artifact-types/README.md" target="_blank" rel="noopener"&gt;&lt;em&gt;artifacts&lt;/em&gt;&lt;/a&gt; (e.g., Docker images, Helm charts, binaries, configuration data, etc.). Such artifacts are called &lt;em&gt;resources&lt;/em&gt; in this specification. Resources are usually built from something, e.g., code in a git repo. Those are named &lt;em&gt;sources&lt;/em&gt; in this specification.&lt;/p&gt;</description></item><item><title>Input and Access Types</title><link>https://ocm.software/docs/tutorials/input-and-access-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/tutorials/input-and-access-types/</guid><description>&lt;ul&gt;
&lt;li&gt;





 
 


&lt;a href="#overview"&gt;Overview&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;





 
 


&lt;a href="#input-types"&gt;Input Types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;





 
 


&lt;a href="#binary"&gt;binary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#dir"&gt;dir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#docker"&gt;docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#dockermulti"&gt;dockermulti&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#file"&gt;file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#helm"&gt;helm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#ociimage"&gt;ociImage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#spiff"&gt;spiff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#utf-8"&gt;utf-8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#access-types"&gt;Access Types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;





 
 


&lt;a href="#github"&gt;gitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#helm-1"&gt;helm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#npm"&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#ociartifact"&gt;ociArtifact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;





 
 


&lt;a href="#s3"&gt;s3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;The Open Component Model spec supports multiple methods how to add resources to a component version. There are two different ways to add content: Input Type and Access Type.&lt;/p&gt;</description></item><item><title>Credentials in .ocmconfig File</title><link>https://ocm.software/docs/tutorials/creds-in-ocmconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/tutorials/creds-in-ocmconfig/</guid><description>&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;The 






&lt;a href="https://github.com/open-component-model/ocm/blob/main/docs/reference/ocm.md" target="_blank" rel="noopener"&gt;OCM command line client&lt;/a&gt; can be configured by supplying it with a 






&lt;a href="https://github.com/open-component-model/ocm/blob/main/docs/reference/ocm_configfile.md" target="_blank" rel="noopener"&gt;configuration file&lt;/a&gt;. By default, the CLI looks for configuration in &lt;code&gt;$HOME/.ocmconfig&lt;/code&gt;, if it exists.&lt;/p&gt;</description></item></channel></rss>