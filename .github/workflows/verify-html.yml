name: Verify HTML Links

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  checks: read

jobs:
  check-links:
    name: Check external and internal links (Netlify Deploy Preview)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Wait for Netlify Deploy Preview
        id: wait_for_preview
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Export variables so they're visible inside bash -c
          export REPO="${{ github.repository }}"
          export SHA="${{ github.event.pull_request.head.sha }}"

          echo "Waiting up to 10 minutes for Netlify deploy preview..."

          # wait for max 10 minutes for status turn green
          timeout 600 bash -c '
            while true; do
              # Query commit status API. Filter for Netlify deploy-preview context
              STATUS_JSON=$(gh api repos/$REPO/commits/$SHA/status \
                --jq ".statuses[] | select(.context==\"netlify/${REPO#*/}/deploy-preview\")")

              # If no deploy preview status is present yet, sleep and retry
              if [ -z "$STATUS_JSON" ]; then
                sleep 5
                continue
              fi

              # Parse state (pending|success|failure|error) and preview URL
              STATE=$(echo "$STATUS_JSON" | jq -r ".state")
              PREVIEW_URL=$(echo "$STATUS_JSON" | jq -r ".target_url")

              echo "Netlify status: $STATE"

              if [ "$STATE" = "success" ]; then
                echo "✅ Deploy preview ready: $PREVIEW_URL"
                echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
                exit 0
              elif [ "$STATE" = "failure" ] || [ "$STATE" = "error" ]; then
                echo "❌ Deploy failed: $STATE"
                exit 1
              fi

              # If still pending, wait before checking again
              sleep 15
            done
          '

          # If timeout (600s) expired, exit with failure
          if [ $? -eq 124 ]; then
            echo "❌ Timeout after 10 minutes"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0 # keep in sync with 'engines'@package.json

      - name: Install Dependencies
        run: npm install

      - name: Build Site using Netlify Preview URL
        id: build_site
        run: |
          npm run build -- --baseURL="$PREVIEW_URL"

      - name: Verify HTML links
        run: |
          curl https://htmltest.wjdp.uk | bash
          chmod +x ./bin/htmltest
          ./bin/htmltest -l 1 -c .github/config/htmltest.yml

      - name: Verify links with linkinator
        run: |
          npm install linkinator
          echo "Verifying links at ${{ steps.build_site.outputs.preview_url }}"
          npx linkinator "${{ steps.build_site.outputs.preview_url }}" --config .github/config/linkinator.json
