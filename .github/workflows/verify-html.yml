name: Verify HTML Links

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  check-links:
    name: Check external and internal links (Netlify Preview)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0 # keep in sync with 'engines'@package.json

      - name: Install Dependencies
        run: npm install

      - name: Build Site using Netlify Preview URL
        id: build_site
        run: |
          PREVIEW_URL="https://deploy-preview-${{ github.event.pull_request.number }}--open-component-model.netlify.app"
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          npm run build -- --baseURL="$PREVIEW_URL"

      - name: Verify HTML links
        run: |
          curl https://htmltest.wjdp.uk | bash
          chmod +x ./bin/htmltest
          ./bin/htmltest -l 1 -c .github/config/htmltest.yml

      - name: Wait for Netlify Deploy Preview
        run: |
          echo "Waiting up to 10 minutes for Netlify deploy preview…"

          timeout 600 bash -c '
            while true; do
              SUITE_JSON=$(
                gh api repos/${{ github.repository }}/commits/${{ github.sha }}/check-suites \
                  --jq "[ .check_suites[] | select(.app.slug == \"netlify\") ]"
              )

              # no suite available?
              if [ "$(echo "$SUITE_JSON" | jq length)" -eq 0 ]; then
                sleep 5
                continue
              fi

              STATUS=$(echo "$SUITE_JSON" | jq -r ".[0].status")
              CONCLUSION=$(echo "$SUITE_JSON" | jq -r ".[0].conclusion")

              echo "Suite status: $STATUS, conclusion: $CONCLUSION"

              if [ "$STATUS" = "completed" ]; then
                if [[ "$CONCLUSION" = "success" || "$CONCLUSION" = "neutral" ]]; then
                  echo "✅ Deploy preview ready: ${{ steps.build_site.outputs.preview_url }}"
                  exit 0
                else
                  echo "❌ Deploy failed with conclusion: $CONCLUSION"
                  exit 1
                fi
              fi

              sleep 10
            done
          '

          if [ $? -eq 124 ]; then
            echo "❌ Timeout after 10 minutes"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ github.token }}


      - name: Verify links with linkinator
        run: |
          npm install linkinator
          echo "Verifying links at ${{ steps.build_site.outputs.preview_url }}"
          npx linkinator "${{ steps.build_site.outputs.preview_url }}" --config .github/config/linkinator.json
