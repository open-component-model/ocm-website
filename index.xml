<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Open Component Model</title><link>https://ocm.software/</link><description>Recent content on Open Component Model</description><generator>Hugo</generator><language>en</language><copyright>© Copyright 2025, SAP SE and Open Component Model Contributors</copyright><atom:link href="https://ocm.software/index.xml" rel="self" type="application/rss+xml"/><item><title>About the OCM Project</title><link>https://ocm.software/docs/overview/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/overview/about/</guid><description>&lt;p>The Open Component Model (OCM) is an open standard that enables teams to describe software artifacts and their lifecycle metadata in a consistent, technology-agnostic way. It’s built to support secure, reliable delivery and deployment of software—across cloud, on-prem, hybrid, and even air-gapped environments. By decoupling and streamlining lifecycle processes like compliance checks, security scans, and deployments, OCM helps teams collaborate more effectively and build trust into every step of the software supply chain.&lt;/p></description></item><item><title>Benefits of OCM</title><link>https://ocm.software/docs/overview/benefits-of-ocm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/overview/benefits-of-ocm/</guid><description>&lt;p>Software development is complex. Most organizations struggle with fragmented tools, complicated workflows, and the challenge of managing software across different environments - cloud, on-premises, hybrid, and even air-gapped networks.&lt;/p></description></item><item><title>Important Terms</title><link>https://ocm.software/docs/overview/important-terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/overview/important-terms/</guid><description>&lt;p>As the Open Component Model (OCM) revolves around components, it is essential to establish a common understanding of the fundamental terminology employed throughout this website. The following section provides concise definitions of key terms, laying the groundwork for the documentation and tutorials that follow.&lt;/p></description></item><item><title>Specification</title><link>https://ocm.software/docs/overview/specification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/overview/specification/</guid><description>&lt;h2 id="where-to-find-the-ocm-specification">Where to find the OCM specification&lt;/h2>
&lt;p>The most up-to-date version of the 






&lt;a href="https://github.com/open-component-model/ocm-spec/blob/main/README.md" target="_blank" rel="noopener">OCM specification&lt;/a> offers you a deep insight to all technical details of the Open Component Model and explains all elements the model OCM is based on.&lt;/p></description></item><item><title>Prerequisites</title><link>https://ocm.software/docs/getting-started/prerequisites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/getting-started/prerequisites/</guid><description>&lt;p>This and the following chapters walk you through some basic steps to get started with OCM concepts and the OCM CLI.
You will learn how to create a component version, display and examine the component, and how to transport and sign it.&lt;/p></description></item><item><title>Installing the OCM CLI</title><link>https://ocm.software/docs/getting-started/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/getting-started/installation/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>You can install the latest release of the OCM CLI from any of the following sources (more details below):&lt;/p></description></item><item><title>Create a Component Version</title><link>https://ocm.software/docs/getting-started/create-component-version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/getting-started/create-component-version/</guid><description>&lt;h2 id="creating-and-storing-component-versions">Creating and Storing Component Versions&lt;/h2>
&lt;p>Component Versions are created using a &lt;code>component-constructor.yaml&lt;/code> file, which is a description file that contains one or multiple components. The file describes the components and their artifacts - resources and sources, metadata in form of labels and references to other components.&lt;/p></description></item><item><title>Display and Examine Component Versions</title><link>https://ocm.software/docs/getting-started/display-and-examine-component-versions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/getting-started/display-and-examine-component-versions/</guid><description>&lt;h2 id="list-component-versions">List Component Versions&lt;/h2>
&lt;p>To show a component stored in an OCM repository or CTF archive (which itself is an OCM repository), the 






&lt;a href="https://github.com/open-component-model/ocm/blob/main/docs/reference/ocm_get_componentversions.md" target="_blank" rel="noopener">&lt;code>ocm get componentversion&lt;/code>&lt;/a> command can be used:&lt;/p></description></item><item><title>Sign Component Versions</title><link>https://ocm.software/docs/getting-started/sign-component-versions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/getting-started/sign-component-versions/</guid><description>&lt;p>Component versions can be signed to ensure integrity along a transport chain.&lt;/p>
&lt;p>Signing requires a key pair, a signature, and, optionally, an issuer, as well as an algorithm and a
name for the signature.&lt;/p></description></item><item><title>Transport OCM Component Versions</title><link>https://ocm.software/docs/getting-started/transport-ocm-component-versions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ocm.software/docs/getting-started/transport-ocm-component-versions/</guid><description>&lt;p>The section 





 
 


&lt;a href="https://ocm.software/docs/getting-started/create-component-version/#add-component-version-to-ctf-archive/">Add Component Version to CTF archive&lt;/a> explained how to store component versions in a CTF archive.&lt;/p>
&lt;p>During the transfer, it is possible to include component references as local blobs. It is also possible to include references in a recursive way.&lt;/p></description></item></channel></rss>